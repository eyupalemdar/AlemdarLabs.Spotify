@inherits PlayerComponentBase

<ContentPage @ref="playerPage"
             BackgroundColor="@AppResources.BlackColor">
    <PancakeView BackgroundGradientStops="@PancakeViewGradientStop"
                 BackgroundGradientStartPoint="new Point(0d, 0d)"
                 BackgroundGradientEndPoint="new Point(1d, 0d)">
        <StackLayout>
            <ScrollView Orientation="@ScrollOrientation.Vertical"
                        Padding="@(Device.RuntimePlatform == Device.RuntimePlatform ? new Thickness(30,10,30,0) : new Thickness(30,70,30,0))">
                <StackLayout>
                    <StackLayout Orientation="@StackOrientation.Horizontal"
                                 HorizontalOptions="@LayoutOptions.FillAndExpand"
                                 HeightRequest="60">
                        <SvgCachedImage Source="@ImageSource.FromFile(AppResources.IconChevronDown)"
                                        VerticalOptions="@LayoutOptions.Center"
                                        HorizontalOptions="@LayoutOptions.Start"
                                        HeightRequest="32" WidthRequest="32">
                            <TapGestureRecognizer NumberOfTapsRequired="1"
                                                  OnTapped="async () => await ClosePageAsync()" />
                        </SvgCachedImage>
                        <StackLayout VerticalOptions="@LayoutOptions.Center"
                                     HorizontalOptions="@LayoutOptions.CenterAndExpand">
                            <Label Text="NOW PLAYING FROM PLAYLIST" TextColor="@Color.White"
                                   FontSize="16"
                                   FontFamily="ProximaNova"
                                   HorizontalTextAlignment="@TextAlignment.Center"
                                   HorizontalOptions="@LayoutOptions.Fill" />
                            <Label Text="Kickass Tunes" TextColor="@Color.White"
                                   Margin="new Thickness(0,-5,0,0)"
                                   FontSize="14"
                                   FontFamily="ProximaNova-Bold"
                                   HorizontalTextAlignment="@TextAlignment.Center"
                                   HorizontalOptions="@LayoutOptions.Fill" />
                        </StackLayout>
                        <SvgCachedImage Source="@ImageSource.FromFile(AppResources.IconMoreVertical)"
                                        VerticalOptions="@LayoutOptions.Center"
                                        HorizontalOptions="@LayoutOptions.End"
                                        HeightRequest="32" WidthRequest="32" />
                    </StackLayout>
                    <CachedImage Source="@ImageSource.FromUri(new Uri(Song.AlbumImageUrl))"
                                 VerticalOptions="@LayoutOptions.CenterAndExpand"
                                 HeightRequest="@(Device.RuntimePlatform == Device.Android ? 300 : 325)" />
                    <Grid ColumnDefinitions="Auto, *"
                          Margin="new Thickness(0,10,0,10)">
                        <GridCell Row="0" Column="0">
                            <StackLayout Orientation="@StackOrientation.Vertical"
                                         HorizontalOptions="@LayoutOptions.Start"
                                         VerticalOptions="@LayoutOptions.Center">
                                <Label Text="@Song.Title" TextColor="@Color.White"
                                       HorizontalOptions="@LayoutOptions.FillAndExpand"
                                       HorizontalTextAlignment="@TextAlignment.Start"
                                       FontSize="18"
                                       FontFamily="ProximaNova-Bold"
                                       class="bold-label" />
                                <Label Text="@Song.Artist" TextColor="@AppResources.GreyColor"
                                       HorizontalOptions="@LayoutOptions.FillAndExpand"
                                       HorizontalTextAlignment="@TextAlignment.Start"
                                       FontSize="16"
                                       FontFamily="ProximaNova" />
                            </StackLayout>
                        </GridCell>
                        <GridCell Row="0" Column="1">
                            <SvgCachedImage Source="@ImageSource.FromFile(Song.IsLiked ? AppResources.IconLiked : AppResources.IconLike)"
                                            HeightRequest="32" WidthRequest="32"
                                            Margin="new Thickness(0,0,5,0)"
                                            HorizontalOptions="@LayoutOptions.End"
                                            VerticalOptions="@LayoutOptions.Center">
                                <TapGestureRecognizer NumberOfTapsRequired="1"
                                                      OnTapped="@(() => { Song.IsLiked = !Song.IsLiked; })" />
                            </SvgCachedImage>
                        </GridCell>
                    </Grid>
                    <StackLayout Orientation="@StackOrientation.Vertical"
                                 HorizontalOptions="@LayoutOptions.FillAndExpand">
                        <AudioSlider HasThumb="true"
                                     ThumbColor="@Color.White"
                                     Value="@StateManager.Ticks"
                                     ValueChanged="@(async (newTicks) => await OnAudioSliderDragComplete(newTicks))"
                                     Minimum="0" Maximum="@Song.LengthInSeconds"
                                     Margin="new Thickness(-5,0,-5,0)"
                                     HeightRequest="4"
                                     HorizontalOptions="@LayoutOptions.FillAndExpand"
                                     VerticalOptions="@LayoutOptions.Center"
                                     BackgroundColor="@Color.White" />
                        <StackLayout Orientation="@StackOrientation.Horizontal"
                                     HorizontalOptions="@LayoutOptions.FillAndExpand">
                            <Label Text="@StateManager.Ticks.SecondsToTime()" TextColor="@AppResources.GreyColor"
                                   FontSize="14"
                                   FontFamily="ProximaNova"
                                   HorizontalOptions="@LayoutOptions.StartAndExpand"
                                   Margin="new Thickness(0,0,5,0)" />
                            <Label Text="@TicksLeft.SecondsToTime()" TextColor="@AppResources.GreyColor"
                                   FontSize="14"
                                   FontFamily="ProximaNova"
                                   HorizontalOptions="@LayoutOptions.End"
                                   Margin="new Thickness(5,0,0,0)" />
                        </StackLayout>
                    </StackLayout>
                    <Grid RowDefinitions="Auto"
                          ColumnDefinitions="*,Auto,Auto,Auto,*"
                          VerticalOptions="@LayoutOptions.CenterAndExpand"
                          HorizontalOptions="@LayoutOptions.CenterAndExpand"
                          Margin="new Thickness(0, 0, 0, 10)">
                        <GridCell Row="0" Column="0">
                            <SvgCachedImage Source="@ImageSource.FromFile(AppResources.IconShuffle)"
                                            HeightRequest="24" WidthRequest="24"
                                            HorizontalOptions="@LayoutOptions.StartAndExpand" />
                        </GridCell>
                        <GridCell Row="0" Column="1">
                            <SvgCachedImage Source="@ImageSource.FromFile(AppResources.IconSkipBack)"
                                            HeightRequest="32" WidthRequest="32"
                                            HorizontalOptions="@LayoutOptions.Center" />
                        </GridCell>
                        <GridCell Row="0" Column="2">
                            <SvgCachedImage Source="@ImageSource.FromFile(StateManager.IsPlaying ? AppResources.IconPauseCircle : AppResources.IconPlayCircle)"
                                            HeightRequest="100" WidthRequest="100"
                                            HorizontalOptions="@LayoutOptions.CenterAndExpand">
                                <TapGestureRecognizer NumberOfTapsRequired="1"
                                                      OnTapped="async () => await StateManager.StartStopPlaying()" />
                            </SvgCachedImage>
                        </GridCell>
                        <GridCell Row="0" Column="3">
                            <SvgCachedImage Source="@ImageSource.FromFile(AppResources.IconSkipForward)"
                                            HeightRequest="32" WidthRequest="32"
                                            HorizontalOptions="@LayoutOptions.Center" />
                        </GridCell>
                        <GridCell Row="0" Column="4">
                            <SvgCachedImage Source="@ImageSource.FromFile(AppResources.IconRepeat)"
                                            HeightRequest="24" WidthRequest="24"
                                            HorizontalOptions="@LayoutOptions.EndAndExpand" />
                        </GridCell>
                    </Grid>
                    <Grid RowDefinitions="auto"
                          ColumnDefinitions="*, *"
                          HorizontalOptions="@LayoutOptions.FillAndExpand"
                          Margin="new Thickness(0, 0, 0, 20)">
                        <GridCell Row="0" Column="0">
                            <CachedImage Source="@ImageSource.FromFile(AppResources.IconDevices)"
                                         HeightRequest="24" WidthRequest="24"
                                         HorizontalOptions="@LayoutOptions.Start"
                                         VerticalOptions="@LayoutOptions.Center" />
                        </GridCell>
                        <GridCell Row="0" Column="1">
                            <CachedImage Source="@ImageSource.FromFile(AppResources.IconPlaylist)"
                                         HeightRequest="24" WidthRequest="24"
                                         HorizontalOptions="@LayoutOptions.End"
                                         VerticalOptions="@LayoutOptions.Center" />
                        </GridCell>
                    </Grid>
                </StackLayout>
            </ScrollView>
        </StackLayout>
    </PancakeView>
</ContentPage>

@code {
    private Microsoft.MobileBlazorBindings.Elements.ContentPage playerPage;
    private List<GradientStop> PancakeViewGradientStop;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        PancakeViewGradientStop = new List<GradientStop>()
        {
            new GradientStop()
            {
                Color = Song.DominantColorInPicture,
                Offset = 0
            },
            new GradientStop()
            {
                Color = AppResources.GradientEndColor,
                Offset = 1
            }
        };
    }

    private async Task ClosePageAsync()
    {
        await playerPage.PopModalAsync(true);
    }
}
